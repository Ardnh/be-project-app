basePath: /api/v1
definitions:
  model.CategoryCreateRequest:
    properties:
      name:
        type: string
    required:
    - name
    type: object
  model.CategoryUpdateRequest:
    properties:
      name:
        type: string
    required:
    - name
    type: object
  model.CreateProjectItem:
    properties:
      budget_item:
        type: integer
      name:
        type: string
      project_id:
        type: string
      status:
        type: boolean
    type: object
  model.CreateProjectRequest:
    properties:
      budget:
        type: integer
      category_id:
        type: string
      description:
        type: string
      name:
        type: string
      user_id:
        type: string
    type: object
  model.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  model.ProfileUpdateRequestBody:
    properties:
      bio:
        type: string
      facebook:
        type: string
      instagram:
        type: string
      linkedIn:
        type: string
      role:
        type: string
      twitter:
        type: string
    type: object
  model.RegisterRequest:
    properties:
      email:
        type: string
      password:
        type: string
      username:
        type: string
    required:
    - email
    - password
    - username
    type: object
  model.UpdateProjectItem:
    properties:
      budget_item:
        type: integer
      name:
        type: string
      project_id:
        type: string
      status:
        type: boolean
    type: object
  model.UpdateProjectRequest:
    properties:
      budget:
        type: integer
      category_id:
        type: string
      description:
        type: string
      name:
        type: string
      user_id:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: ardn.h79@gmail.com
    name: Muhammad Ardan Hilal
    url: ardn.h79@gmail.com
  description: API Documentation for Project APP API.
  title: Project APP API
  version: "1.0"
paths:
  /category:
    post:
      consumes:
      - application/json
      description: Create a new category
      parameters:
      - description: Create category
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/model.CategoryCreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success create category
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request body or missing required fields
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      summary: Create category
      tags:
      - Category
  /category/:
    get:
      consumes:
      - application/json
      description: Get all category
      parameters:
      - description: Page number
        in: query
        name: page
        type: string
      - description: Number of items per page
        in: query
        name: pageSize
        type: string
      - description: Filter by category name
        in: query
        name: categoryName
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success get all categories
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request body or missing required fields
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      summary: Get all category
      tags:
      - Category
  /category/{id}:
    delete:
      consumes:
      - application/json
      description: Delete category
      parameters:
      - description: category id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success update category
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request body or missing required fields
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      summary: Delete category
      tags:
      - Category
    put:
      consumes:
      - application/json
      description: Update category by ID
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: string
      - description: Update category
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/model.CategoryUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success update category
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request body or missing required fields
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Category not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      summary: Update category
      tags:
      - Category
  /project-item:
    post:
      consumes:
      - application/json
      description: Create a new item within an existing project
      parameters:
      - description: Create Project Item Request
        in: body
        name: projectItem
        required: true
        schema:
          $ref: '#/definitions/model.CreateProjectItem'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      summary: Create a new project item
      tags:
      - Projects
  /project-item/{id}:
    delete:
      description: Delete a specific project item by its ID
      parameters:
      - description: Project Item ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: Successfully deleted the project item
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid ID or error parsing ID
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      summary: Delete a project item
      tags:
      - Projects
    put:
      consumes:
      - application/json
      description: Update the details of an existing project item by ID
      parameters:
      - description: Project Item ID
        in: path
        name: id
        required: true
        type: string
      - description: Update Project Item Request
        in: body
        name: projectItem
        required: true
        schema:
          $ref: '#/definitions/model.UpdateProjectItem'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      summary: Update an existing project item
      tags:
      - Projects
  /project-item/{project_id}:
    get:
      description: Retrieve all items associated with a specific project, with pagination,
        sorting, and filtering options.
      parameters:
      - description: Project ID
        in: path
        name: project_id
        required: true
        type: string
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Number of items per page
        in: query
        name: pageSize
        type: integer
      - description: Filter by project item name
        in: query
        name: projectItemName
        type: string
      - default: asc
        description: Sort order, either 'asc' or 'desc'
        in: query
        name: sortDirection
        type: string
      responses:
        "200":
          description: Successfully retrieved project items
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      summary: Get all project items by project ID
      tags:
      - Projects
  /projects:
    get:
      consumes:
      - application/json
      description: Retrieve a paginated list of projects with optional sorting and
        filtering by project name and category name
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Number of items per page
        in: query
        name: pageSize
        type: integer
      - description: Filter by project name
        in: query
        name: projectName
        type: string
      - default: asc
        description: Sort order (asc or desc)
        in: query
        name: sortDirection
        type: string
      - description: Filter by category name
        in: query
        name: categoryName
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      summary: Get all projects with pagination, sorting, and filtering
      tags:
      - Projects
    post:
      consumes:
      - application/json
      description: Create a new item within an existing project
      parameters:
      - description: Create Project Request
        in: body
        name: projectItem
        required: true
        schema:
          $ref: '#/definitions/model.CreateProjectRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      summary: Create a new project
      tags:
      - Projects
  /projects/{id}:
    delete:
      consumes:
      - application/json
      description: Delete the project by its ID
      parameters:
      - description: Project ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      summary: Delete an existing project
      tags:
      - Projects
    put:
      consumes:
      - application/json
      description: Update the details of an existing project by ID
      parameters:
      - description: Project ID
        in: path
        name: id
        required: true
        type: string
      - description: Update Project Request
        in: body
        name: project
        required: true
        schema:
          $ref: '#/definitions/model.UpdateProjectRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      summary: Update an existing project
      tags:
      - Projects
  /user/following:
    get:
      consumes:
      - application/json
      description: Find user profile by id
      parameters:
      - description: user_id
        in: path
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success update category
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request body or missing required fields
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Find user profile by id
      tags:
      - Users
  /user/login:
    post:
      consumes:
      - application/json
      description: Login user
      parameters:
      - description: Login
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/model.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success update category
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request body or missing required fields
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Login user
      tags:
      - Users
  /user/profile:
    put:
      consumes:
      - application/json
      description: Update profile by id
      parameters:
      - description: Update profile
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/model.ProfileUpdateRequestBody'
      produces:
      - application/json
      responses:
        "200":
          description: Success update category
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request body or missing required fields
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      summary: Update profile by id
      tags:
      - Users
  /user/profile/:userId:
    get:
      description: Get profile by id
      parameters:
      - description: userId
        in: path
        name: userId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success get profile by id
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request body or missing required fields
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      summary: Get profile by id
      tags:
      - Users
  /user/register:
    post:
      consumes:
      - application/json
      description: Register user
      parameters:
      - description: Login
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/model.RegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success update category
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request body or missing required fields
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Register user
      tags:
      - Users
securityDefinitions:
  Bearer:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
